STACK SEGMENT PARA STACK
	DW 128H DUP(0)
STACK ENDS

DATA SEGMENT
	SIN DB 080H,096H,0AEH,0C5H,0D8H,0E9H,0F5H,0FDH
		DB 0FFH,0FDH,0F5H,0E9H,0D8H,0C5H,0AEH,096H
		DB 080H,066H,04EH,038H,025H,015H,009H,004H
		DB 000H,004H,009H,015H,025H,038H,04EH,066H
	CLK DB 120,106,95,89,80,71,63
DATA ENDS

CODE SEGMENT
	ASSUME CS:CODE, SS:STACK, DS:DATA
START:
	MOV DI, 0
	MOV AX, DATA
	MOV DS, AX
	MOV DX, 0E48BH
	MOV AL, 10001011B
	OUT DX, AL
MAINLOOP:
	MOV AH, 0BH
	INT 21H
	CMP AL, 0FFH
	JE MAINLOOP
	MOV AH, 07H
	INT 21H
	CMP AL, 27
	JE GOODBYE			; IF CATCH ESC, EXIT PROGRAM
	; NUMBER INPUT
	LEA BX, CLK
	SUB AL, '1'			; GET OFFSET TO DELAY VALUE
	MOV AH, 0
	MOV SI, AX
	MOV AH, [BX+SI]		; AH STORES DELAY VALUE
	MOV AL, 00010100B
	MOV DX, 0E483H
	OUT DX, AL			; SET CLOCK DELAY COUNTER
	MOV DX, 0E480H
	MOV AL, 12
	OUT DX, AL
	LEA BX, SIN
	MOV CX, 5000
	MOV DX, 0E48AH
INNER:
WAITING:
	IN AL, DX
	AND AL, 1
	CMP AL, 0
	JE WAITING
	MOV AL, [BX+DI]		; DI ALWAYS HOLDS SIN VALUE OFFSET
	MOV DX, 0E490H
	OUT DX, AL
	ADD DI, 1
	CMP DI, 31
	JLE NOINC
	MOV DI, 0
NOINC:
	SUB CX, 1
	CMP CX, 0
	JZ MAINLOOP
	JMP INNER
GOODBYE:
	MOV AH, 4CH
	INT 21H


CODE ENDS
END START
