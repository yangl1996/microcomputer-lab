STACK SEGMENT PARA STACK
	DW 128H DUP(0)
STACK ENDS

DATA SEGMENT
	KBDBUF DB 255 DUP(0)		; KEYBOARD BUFFER
	INTFLAG DB 0				; INTERRUPT INDICATOR
DATA ENDS

CODE SEGMENT
ASSUME CS:CODE, SS:STACK, DS:DATA
START:
	; SETUP INTERRUPT
	MOV AX, CS
	MOV DS, AX
	MOV DX, OFFSET IRQ
	MOV AX, 250EH
	INT 21H
	CLI
	MOV DX, 0EC4CH
	MOV AL, 43H
	OUT DX, AL
	INC DX
	MOV AL, 1DH
	OUT DX, AL
	IN AL, 21H
	AND AL, 10111111B
	OUT 21H, AL

	; SET TIMER
	MOV DX, 0E483H
	MOV AL, 00010110B
	OUT DX, AL
	MOV DX, 0E480H
	MOV AL, 52
	OUT DX, AL
	; SET DATA SEGMENT
	MOV AX, DATA
	MOV DS, AX
	; 8251A INIT
	MOV DX, 0E4B9H
	MOV AL, 0
	OUT DX, AL
	OUT DX, AL
	OUT DX, AL			; SAFE INIT
	MOV AL, 40H
	OUT DX, AL			; INTERNAL RESET
	MOV AL, 4EH
	OUT DX, AL			; ASYNC, 1 STOP, 8 DATA, NO PARITY, 16 FACTOR
	MOV AL, 27H
	OUT DX, AL			; ENABLE TX/RX
	MOV SI, 0
	MOV DI, 0			; INIT INDEX REGISTER
	; SI HOLDS BUFFER SIZE

TXRX:
	; READ IN KEYBOARD
	MOV AH, 0BH
	INT 21H
	CMP AL, 0FFH
	JZ TXRX				; NO INPUT
	MOV AH, 01H
	INT 21H
	CMP AL, 27
	JE GOODBYE			; EXIT UPON ESCAPE PRESSED
	CMP AL, 32
	JE TX				; SEND UPON SPACE PRESSED
	LEA BX, KBDBUF
	MOV [BX + SI], AL	; STORE INPUT TO BUFFER
	ADD SI, 1			; INCREASE BUFFER SIZE
	JMP TXRX

TX:
	LEA BX, KBDBUF
	MOV DI, 0			; DI HOLDS BUFFER SHIFT
	
TXLOOP:
	CMP SI, 0
	JE TXEND			; CHECK WHETHER ALL SENT
	LEA BX, KBDBUF
	MOV AL, [BX + DI]	; AL HOLDS DATA TO BE SENT
	SUB SI, 1
	ADD DI, 1
	MOV CL, AL
TXWAIT:
	MOV DX, 0E4B9H
	IN AL, DX
	AND AL, 1			; PRESERVE TXRDY BIT
	JZ TXWAIT			; IF NOT READY, WAIT
	MOV AL, CL
	MOV DX, 0E4B8H
	OUT DX, AL			; SEND OUT DATA
	JMP TXLOOP

TXEND:
	JMP TXRX

GOODBYE:
 	; RESTORE INTERRUPT SETTINGS
	IN AL, 21H
	OR AL, 40H
	OUT 21H, AL
	MOV DX, 0EC4CH
	MOV AL, 42H
	OUT DX, AL
	STI
	MOV AH, 4CH
	INT 21H

IRQ PROC FAR
	PUSH AX
	PUSH DX
	PUSH DS
	MOV AX, DATA
	MOV DS, AX
	MOV DX, 0E4B8H
	IN AL, DX
	MOV AH, 0EH
	INT 10H
	MOV AL, 20H
	OUT 20H, AL
	MOV DX, 0EC4DH
	MOV AL, 1DH
	OUT DX, AL
	POP DS
	POP DX
	POP AX
	IRET
IRQ ENDP

CODE ENDS
END START
