DATA SEGMENT
MESS 	DB 'THIS IS AN IRQ INTERRUPT!', 0AH, 0DH, '$'
DATA ENDS

CODE SEGMENT
ASSUME CS:CODE, DS:DATA
START:
	MOV AX, CS
	MOV DS, AX
	MOV DX, OFFSET IRQ
	MOV AX, 250EH			; CALL DOS TO SET 0EH INTERRUPT
	INT 21H
	CLI
	MOV DX, 0EC4CH
	MOV AL, 43H
	OUT DX, AL				; CONFIGURE PCI, ENABLE INTERRUPT
	INC DX
	MOV AL, 1DH
	OUT DX, AL
	IN AL, 21H				; READ CURRENT MASK
	AND AL, 10111111B		; ENABLE IRQ6
	OUT 21H, AL
	MOV AX, DATA
	MOV DS, AX				; SET DATA SEGMENT REGISTER
	MOV CX, 10				; CX STORES LOOP COUNTER
	STI						; SET INTERRUPT FLAG
NEXT:
	MOV BH, 1				; IRQ WILL SET BH TO 0
LL:
	CMP BH, 0				; CHECK WHETHER ENTERED IRQ
	JNE LL
	CALL DISPMSG
	LOOP NEXT
	IN AL, 21H
	OR AL, 01000000B		; TURN OFF IRQ6 (SET MASK TO 1)
	OUT 21H, AL
	MOV DX, 0EC4CH
	MOV AL, 42H
	OUT DX, AL				; TURN OFF PCI INTERRUPT
	STI
	MOV AH, 4CH
	INT 21H

DISPMSG PROC
	MOV DX, OFFSET MESS
	MOV AH, 09
	INT 21H
	RET
DISPMSG ENDP

IRQ PROC FAR
	PUSH AX					; SAVE SITE
	PUSH DX
	MOV BH, 0				; TELL MAIN PROC ABOUT IRQ
	MOV AL, 00100000B		; SEND EOI MESSAGE
	OUT 20H, AL
	MOV DX, 0EC4DH
	MOV AL, 00011101B		; CLEAR PCI INTERRUPT STATUS
	OUT DX, AL
	POP DX
	POP AX
	IRET
IRQ ENDP
CODE ENDS
END START
